var _=Object.defineProperty;var w=(t,s,e)=>s in t?_(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var i=(t,s,e)=>w(t,typeof s!="symbol"?s+"":s,e);import"./modulepreload-polyfill-B5Qt9EMX.js";function p(t){if(!t)throw new Error("Element not found!");return t}function u(t){const s=document.querySelector(t);return p(s)}function d(t){return document.querySelectorAll(t)}function h(t,s){const e=t.querySelector(s);return p(e)}const o=2,E=6,f=0,R=21;class D{update(s){const e=(s+1)%o,n=d(".user"),r=n[e];n.forEach(a=>a.classList.remove("active")),r.classList.add("active")}}class A{constructor(){i(this,"containerEl",u(".admin"))}generateMarkup(){return`
			<div class="block">
				<div class="user__info">
					<h2 class="user__info-name">All Dice Rolls</h2>
					<span class="user__info-dash">&mdash;</span>
					<span class="user__info-result font-bold">0</span>
				</div>
				<div class="sub-block font-small main__all-rolls">Let's make a move</div>
			</div>
		`}update(){this.containerEl.insertAdjacentHTML("beforeend",this.generateMarkup())}}class P{constructor(){i(this,"containerEl",u(".users"))}generateMarkup(s){return`
			<div class="block user ${s===f&&"active"}">
				<div class="user__info">
					<h2 class="user__info-name">Player ${s+1}</h2>
					<span class="user__info-dash">&mdash;</span>
					<span class="user__info-result font-bold">0</span>
					<span class="user__info-in-turn font-semibold">In turn</span>
				</div>
				<div class="sub-block font-small user__results">0</div>
			</div>
		`}update({playerIndex:s}){this.containerEl.insertAdjacentHTML("beforeend",this.generateMarkup(s))}}function v(t,s){const e=new Uint32Array(1);window.crypto.getRandomValues(e);const n=e[0]/4294967296;return Math.floor(n*(s-t+1))+t}function y(t){return t.reduce((s,e)=>s+e,0)}class m{render({diceResults:s,targetEl:e,resultsClass:n,infoResultClass:r}){const a=h(e,`.${n}`),c=h(e,`.${r}`);a.innerHTML=s.join(", "),c.innerHTML=y(s).toString()}}class I extends m{update({diceResults:s}){const e=u(".admin");this.render({diceResults:s,targetEl:e,resultsClass:"main__all-rolls",infoResultClass:"user__info-result"})}}class x extends m{update({playerIndex:s,diceResults:e}){const n=d(".user")[s];this.render({diceResults:e,targetEl:n,resultsClass:"user__results",infoResultClass:"user__info-result"})}}class S{update({playerIndex:s,isWin:e}){if(e){const n=d(".user")[s];n.classList.contains("winner")||n.classList.add("winner")}}}class l{constructor(){i(this,"subscribers",new Set)}subscribe(s){this.subscribers.add(s)}unsubscribe(s){this.subscribers.delete(s)}notify(s){this.subscribers.forEach(e=>e.update(s))}}class b{constructor(){i(this,"diceResults",[]);i(this,"results",new l)}}class T extends b{constructor({displayers:e}){super();i(this,"initial",new l);this.initial.subscribe(e.initialAdminDisplayer),this.results.subscribe(e.resultsAdminDisplayer),this.initial.notify(null)}update({playerIndex:e,diceResult:n}){this.diceResults.push(n),this.results.notify({playerIndex:e,diceResults:this.diceResults})}}class L extends b{constructor({selfIndex:e,winnerDiceTotalResult:n,displayers:r}){super();i(this,"selfIndex");i(this,"winnerDiceTotalResult",R);i(this,"initial",new l);i(this,"winStatus",new l);this.selfIndex=e,n!=null&&(this.winnerDiceTotalResult=n),this.initial.subscribe(r.initialPlayerDisplayer),this.results.subscribe(r.resultsPlayerDisplayer),this.winStatus.subscribe(r.winStatusDisplayer),this.initial.notify({playerIndex:this.selfIndex})}update({playerIndex:e,diceResult:n}){e===this.selfIndex&&(this.diceResults.push(n),this.results.notify({playerIndex:e,diceResults:this.diceResults}),this.winStatus.notify({playerIndex:e,isWin:y(this.diceResults)>=this.winnerDiceTotalResult}))}}class k extends l{constructor(s,e=f){super(),this.playersCount=s,this.currentPlayerIndex=e}next(){this.currentPlayerIndex=(this.currentPlayerIndex+1)%this.playersCount}run(){this.notify(this.currentPlayerIndex),this.next()}}class M extends l{constructor(s){super(),this.sidesCount=s}roll(){return v(1,this.sidesCount)}update(s){this.notify({playerIndex:s,diceResult:this.roll()})}}class C{constructor(){i(this,"turnGenerator",new k(o));i(this,"diceGenerator",new M(E));this.turnGenerator.subscribe(this.diceGenerator),this.turnGenerator.subscribe(new D),this.createAdmin(),this.createPlayers()}createAdmin(){const s=new A,e=new I,n={displayers:{initialAdminDisplayer:s,resultsAdminDisplayer:e}};this.diceGenerator.subscribe(new T(n))}createPlayers(){const s=new P,e=new x,n=new S;Array.from({length:o}).map((r,a)=>{const c={selfIndex:a,displayers:{initialPlayerDisplayer:s,resultsPlayerDisplayer:e,winStatusDisplayer:n}};this.diceGenerator.subscribe(new L(c))})}run(){this.turnGenerator.run()}}window.onload=function(){const t=new C,s=u(".make-a-move");s&&(s.onclick=function(){t.run()})};
